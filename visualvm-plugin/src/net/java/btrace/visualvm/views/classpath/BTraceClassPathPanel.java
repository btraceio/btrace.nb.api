/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BTraceClassPathPanel.java
 *
 * Created on Jul 21, 2009, 1:16:34 PM
 */

package net.java.btrace.visualvm.views.classpath;

import java.io.File;
import java.util.Enumeration;
import java.util.StringTokenizer;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import net.java.btrace.visualvm.api.BTraceTask;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;

/**
 *
 * @author Jaroslav Bachorik
 */
public class BTraceClassPathPanel extends javax.swing.JPanel {
    private BTraceTask task;

    /** Creates new form BTraceClassPathPanel */
    public BTraceClassPathPanel(BTraceTask task) {
        initComponents();
        this.task = task;
        customInitComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        cpList = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setOpaque(false);

        cpList.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cpList.setModel(new DefaultListModel());
        cpList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cpListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(cpList);

        jButton1.setMnemonic('j');
        jButton1.setText(org.openide.util.NbBundle.getMessage(BTraceClassPathPanel.class, "BTraceClassPathPanel.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setMnemonic('f');
        jButton2.setText(org.openide.util.NbBundle.getMessage(BTraceClassPathPanel.class, "BTraceClassPathPanel.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setMnemonic('r');
        jButton3.setText(org.openide.util.NbBundle.getMessage(BTraceClassPathPanel.class, "BTraceClassPathPanel.jButton3.text")); // NOI18N
        jButton3.setDefaultCapable(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setDialogTitle("Select a JAR file");
        jfc.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f) {
                return f.isDirectory() || f.getName().toLowerCase().endsWith("jar");
            }

            @Override
            public String getDescription() {
                return "JARs";
            }
        });
        jfc.setMultiSelectionEnabled(true);
        jfc.showOpenDialog(this);
        DefaultListModel model = (DefaultListModel)cpList.getModel();
        for (File f :jfc.getSelectedFiles()) {
            model.addElement(f.getAbsolutePath());
            task.addCPEntry(f.getAbsolutePath());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setDialogTitle("Select a class folder");
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        jfc.setMultiSelectionEnabled(true);
        jfc.showOpenDialog(this);
        DefaultListModel model = (DefaultListModel)cpList.getModel();

        for (File f :jfc.getSelectedFiles()) {
            model.addElement(f.getAbsolutePath());
            task.addCPEntry(f.getAbsolutePath());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultListModel model = (DefaultListModel)cpList.getModel();
        for(Object value : cpList.getSelectedValues()) {
            model.removeElement(value);
            task.removeCPEntry((String)value);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cpListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cpListMouseClicked
        if (evt.getButton() == 1 && evt.getClickCount() > 1) {
            DefaultListModel model = (DefaultListModel)cpList.getModel();
            NotifyDescriptor.InputLine dd = new NotifyDescriptor.InputLine("", "Edit");
            int selectedIndex = cpList.getSelectedIndex();
            String editedValue = (String)model.getElementAt(selectedIndex);
            dd.setInputText(editedValue);
            Object result = DialogDisplayer.getDefault().notify(dd);
            if (result == NotifyDescriptor.OK_OPTION) {
                model.setElementAt(dd.getInputText(), selectedIndex);
                task.removeCPEntry(editedValue);
                task.addCPEntry(dd.getInputText());
            }
        }
    }//GEN-LAST:event_cpListMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList cpList;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    public Enumeration getCPEnumeration() {
        return ((DefaultListModel)cpList.getModel()).elements();
    }

    private void customInitComponents() {
        DefaultListModel model = (DefaultListModel)cpList.getModel();
        StringTokenizer st = new StringTokenizer(task.getClassPath(), File.pathSeparator);
        while (st.hasMoreTokens()) {
            model.addElement(st.nextToken());
        }
    }
}
